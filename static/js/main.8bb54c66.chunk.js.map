{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","event","this","props","className","summary","location","start","dateTime","timeZone","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","updateEventCount","eventCount","e","WelcomeScreen","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","navigator","onLine","JSON","parse","token","removeQuery","url","extractLocations","setItem","stringify","Set","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","showWelcomeScreen","warningText","getData","number","city","split","shift","locationEvents","currentLocation","mounted","isTokenValid","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","name","YAxis","Tooltip","cursor","strokeDasharray","Scatter","fill","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8bb54c66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    show: false,\r\n  };\r\n\r\n  handleButton = () => {\r\n    this.setState((prevState) => ({ show: !prevState.show }));\r\n  };\r\n\r\n  render() {\r\n    let event = this.props.event;\r\n\r\n    return (\r\n      <div className=\"Event\">\r\n        <h1 className=\"EventSummary\">{event.summary}</h1>\r\n        <h2 className=\"EventLocation\">{event.location}</h2>\r\n        <h3 className=\"EventDate\">\r\n          start: {event.start.dateTime} - Time Zone: {event.start.timeZone}\r\n        </h3>\r\n        {this.state.show === true && (\r\n          <p className=\"EventDetails\">{event.description}</p>\r\n        )}\r\n        {this.state.show === false && (\r\n          <button className=\"showMore\" onClick={() => this.handleButton()}>\r\n            Show details\r\n          </button>\r\n        )}\r\n        {this.state.show === true && (\r\n          <button className=\"showLess\" onClick={() => this.handleButton()}>\r\n            hide details\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = \"blue\";\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = \"red\";\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = \"purple\";\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };\r\n","import React, { Component } from \"react\";\r\nimport { InfoAlert } from \"./Alert\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: \"\",\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: \"...\",\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: suggestions,\r\n        suggestions: [],\r\n        showSuggestions: false,\r\n        infoText: \"No city found\",\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: \"...\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          placeholder=\"Search for a city...\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n        />\r\n        <ul\r\n          className=\"suggestions\"\r\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\r\n        >\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n          <InfoAlert text={this.state.infoText} />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from \"./Alert\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 12,\r\n    errorText: \"\",\r\n  };\r\n\r\n  updateEventCount = (eventCount) => {\r\n    if (eventCount < 1 || eventCount > 32) {\r\n      return this.setState({\r\n        numberOfEvents: 0,\r\n        errorText: \"Please select a number between 1-32\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: eventCount,\r\n        errorText: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"EventsNumber\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={(e) => this.updateEventCount(e.target.value)}\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React from \"react\";\r\nimport \"./WelcomeScreen.css\";\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ? (\r\n    <div className=\"WelcomeScreen\">\r\n      <h1>Welcome to the Meet app</h1>\r\n      <h4>\r\n        Log in to see upcoming events around the world for full-stack developers\r\n      </h4>\r\n      <div className=\"button_cont\" align=\"center\">\r\n        <div class=\"google-btn\">\r\n          <div class=\"google-icon-wrapper\">\r\n            <img\r\n              class=\"google-icon\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\r\no.svg\"\r\n              alt=\"Google sign-in\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              props.getAccessToken();\r\n            }}\r\n            rel=\"nofollow noopener\"\r\n            class=\"btn-text\"\r\n          >\r\n            <b>Sign in with google</b>\r\n          </button>\r\n          Page 1\r\n        </div>\r\n      </div>\r\n      <a\r\n        href=\"https://clairedelorie.github.io/meet/privacy.html\"\r\n        rel=\"nofollow noopener\"\r\n      >\r\n        Privacy policy\r\n      </a>\r\n    </div>\r\n  ) : null;\r\n}\r\nexport default WelcomeScreen;\r\n","const mockData = [\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181161784712000\"',\r\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:17:46.000Z\",\r\n    updated: \"2020-05-27T12:01:32.356Z\",\r\n    summary: \"Learn JavaScript\",\r\n    description:\r\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    location: \"London, UK\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-19T17:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181159875584000\"',\r\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:14:30.000Z\",\r\n    updated: \"2020-05-27T11:45:37.792Z\",\r\n    summary: \"React is Fun\",\r\n    description:\r\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    location: \"Berlin, Germany\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-20T15:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://9r18wydgz5.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return events ? JSON.parse(events).events : [];\r\n  }\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url =\r\n      \"https://9r18wydgz5.execute-api.us-east-1.amazonaws.com/dev/api/get-events\" +\r\n      \"/\" +\r\n      token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    \"https://9r18wydgz5.execute-api.us-east-1.amazonaws.com/dev/api/token\" +\r\n      \"/\" +\r\n      encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport WelcomeScreen from \"./WelcomeScreen\";\nimport { getEvents, extractLocations, checkToken, getAccessToken } from \"./api\";\nimport { WarningAlert } from \"./Alert\";\nimport \"./nprogress.css\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 12,\n    showWelcomeScreen: undefined,\n    warningText: \"\",\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n\n      if (!navigator.onLine) {\n        this.setState({\n          warningText: \"Client is offline. Data could be outdated\",\n        });\n      } else {\n        this.setState({\n          warningText: \"\",\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter(\n        (event) => event.location === location\n      ).length;\n      const city = location.split(\", \").shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n        numberOfEvents: eventCount,\n      });\n    });\n  };\n\n  updateEventCount = (eventCount) => {\n    this.setState({\n      numberOfEvents: eventCount,\n    });\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, eventCount);\n  };\n\n  render() {\n    // if (this.state.showWelcomeScreen === undefined)\n    const { locations, numberOfEvents } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <h4>Choose your nearest city</h4>\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={numberOfEvents}\n        />\n        <h4>Events in each city</h4>\n\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n          <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" />\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          <Scatter data={this.getData()} fill=\"#8884d8\" />\n        </ScatterChart>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as atatus from \"atatus-spa\";\natatus.config(\"850da2caef42414e81b1fbce2ebf9e3d\").install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}